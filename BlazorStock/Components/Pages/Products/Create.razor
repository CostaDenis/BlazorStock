@page "/products/create"
@using BlazorStock.Data
@using BlazorStock.Models
@using Microsoft.EntityFrameworkCore
@inject AppDbContext _Context
@inject NavigationManager _navigationManager

<h1>Criar Produto</h1>

<EditForm Model="_product" OnValidSubmit="HandleSubimtAsync">

    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="Name" class="form-label">Nome</label>
        <InputText class="form-control" type="text" id="Name" @bind-Value="_product.Name" />
    </div>

    <div class="mb-3">
        <label for="Price" class="form-label">Pre√ßo</label>
        <InputNumber class="form-control" type="decimal" id="Price" @bind-Value="_product.Price" />
    </div>

    <div class="mb-3">
        <label for="CategoryId" class="form-label">Categoria</label>
        <InputSelect id="categoryId" @bind-Value="_product.CategoryId" TValue="int" class="form-control">
            @foreach (var c in _categories)
            {
                <option value="@c.Id">@c.Name</option>
            }
        </InputSelect>
    </div>

    @if (!string.IsNullOrEmpty(_errorMessage))
    {
        <div class="alert alert-danger" role="alert">@_errorMessage</div>
    }
    <button type="submit" class="btn btn-primary">Salvar</button>


</EditForm>


@code {
    private Product _product = new Product();
    private List<Category> _categories = new List<Category>();
    string _errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        _categories = await _Context.Categories.AsNoTracking().ToListAsync();
        _product.CategoryId = _categories[0].Id;
    }

    async Task HandleSubimtAsync()
    {
        try
        {
            await _Context.Products.AddAsync(_product);
            await _Context.SaveChangesAsync();
            _navigationManager.NavigateTo("/products");
        }
        catch (Exception ex)
        {
            _errorMessage = ex.Message;
        }
    }
}
